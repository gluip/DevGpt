using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Text;
using System.Threading.Tasks;
using OpenAI.GPT3;
using OpenAI.GPT3.Managers;
using OpenAI.GPT3.ObjectModels;
using OpenAI.GPT3.ObjectModels.RequestModels;

namespace DevGpt.Console
{
    public class OpenAIClient
    {
        public OpenAIClient()
        {
        }

        public async Task<string> CompletePrompt(string prompt)
        {
            //do a call to the openai api completion api with 
            //the prompt and return the result

            //create a http client with fiddler proxy
            var client = new HttpClient(new HttpClientHandler { Proxy = new WebProxy("http://127.0.0.1:8888") });
            
            

            //var openAi = new OpenAIService(new OpenAiOptions
            //{
            //    ApiKey = "5e7191ba6fac4765b7f9096b61f7aa4a",
            //    ResourceName = "martijnopenaieastus",
            //    ProviderType = ProviderType.Azure,
            //    DeploymentId = "gpt35"
            //},client);

            //var completion = await openAi.(new OpenAI.GPT3.ObjectModels.RequestModels.CompletionCreateRequest
            //{
            //    Prompt = prompt,
            //    Model= Models.ChatGpt3_5Turbo,
            //    MaxTokens = 300,
            //    Temperature = 0.9f,
            //    TopP = 1,
            //    PresencePenalty = 0,
            //    FrequencyPenalty = 0,
            //});

            //return completion.Choices[0].Text;
        }
    }
}
